terraform {
  required_providers {
    proxmox = {
      source  = "telmate/proxmox"
      version = "2.9.6"
    }
  }
}

provider "proxmox" {
  pm_api_url          = "https://172.16.20.206:8006/api2/json"
  pm_api_token_id     = var.user_token_id
  pm_api_token_secret = var.user_token_secret
  pm_tls_insecure     = true
}

locals {
  ssh_user         = "root"
  private_key_path = "~/.ssh/id_rsa"
}

resource "proxmox_vm_qemu" "docker_vm" {
  count       = 3
  name        = "docker-vm-${count.index + 1}"
  target_node = var.proxmox_host
  clone       = var.template_name
  os_type     = "cloud_init"
  
  ## VM Specs
  agent       = 1
  cores	      = 2
  sockets     = 1
  cpu         = "host"
  memory      = 2048
  scsihw      = "virtio-scsi-pci"
  bootdisk    = "scsi0"

  disk {
    type            = "scsi"
    storage         = "local-lvm"
    size            = "50G"
    ssd             = 1
    slot            = 0
  }

  network {
    bridge    = "vmbr0"
    model     = "virtio"
  }
  
  provisioner "local-exec"{
    command = "sshpass -p \"mit\" ssh-copy-id -i $HOME/.ssh/id_rsa.pub -f  root@172.16.20.30"
  }

  provisioner "remote-exec" {
    inline = ["echo 'Wait until SSH is ready'"]
    connection {
      type        = "ssh"
      user        = local.ssh_user
      private_key = file(local.private_key_path)
      host        = "${self.ssh_host}"
      port        = "${self.ssh_port}"
    }
  }

}

output "nodeip" {
  value = "${proxmox_vm_qemu.docker_vm.*.ssh_host}"
}

resource "null_resource" "send-ssh-id" {
  provisioner "local-exec" {
    command = <<-EOT 
              sshpass -p "mit" ssh-copy-id -i $HOME/.ssh/id_rsa.pub -f  mit
              
              EOT
  }
}